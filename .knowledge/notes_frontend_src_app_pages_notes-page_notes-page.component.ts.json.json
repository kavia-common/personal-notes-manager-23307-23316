{"is_source_file": true, "format": "TypeScript", "description": "This is an Angular component for a notes page, managing notes display, selection, creation, deletion, and search functionalities, while integrating with a notes service for data operations.", "external_files": ["../../components/sidebar/sidebar.component", "../../components/topbar/topbar.component", "../../components/note-list/note-list.component", "../../components/note-detail/note-detail.component", "../../services/notes.service", "../../models/note.model"], "external_methods": ["inject", "isPlatformServer", "subscribe", "set", "getSelectedNoteId", "loadNotes", "createNote", "selectNote", "updateNote", "deleteNote"], "published": ["NotesPageComponent"], "classes": [{"name": "NotesPageComponent", "description": "Main Angular component for the notes page, orchestrating sub-components and data flow for notes management."}], "methods": [{"name": "constructor", "description": "Initializes subscriptions to the notes service observables and sets up default selected note if applicable."}, {"name": "ngOnInit", "description": "Lifecycle hook to load notes on component initialization, avoiding server-side rendering calls."}, {"name": "onCreate", "description": "Creates a new note with default title and empty content."}, {"name": "onSearch", "description": "Filters notes based on a search term matching title, content, or tags."}, {"name": "onSelect", "description": "Selects a note by its ID."}, {"name": "onSave", "description": "Saves modifications to the currently selected note."}, {"name": "onDelete", "description": "Deletes the currently selected note."}, {"name": "selectedNote", "description": "Getter that returns the currently selected note object or null."}], "calls": ["this.notesSvc.notesObservable.subscribe", "this.notesSvc.loadingObservable.subscribe", "this.notesSvc.selectedNoteObservable.subscribe", "this.notesSvc.loadNotes", "this.notesSvc.createNote", "this.notesSvc.selectNote", "this.notesSvc.updateNote", "this.notesSvc.deleteNote", "this.notesSvc.getSelectedNoteId"], "search-terms": ["Angular", "Component", "NotesPage", "NotesService", "Signal", "Subscription", "Note", "SSR", "Reactive"], "state": 2, "file_id": 36, "knowledge_revision": 96, "git_revision": "", "revision_history": [{"73": ""}, {"95": ""}, {"96": ""}], "ctags": [{"_type": "tag", "name": "NotesPageComponent", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-23307-23316/notes_frontend/src/app/pages/notes-page/notes-page.component.ts", "pattern": "/^export class NotesPageComponent {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "cur", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-23307-23316/notes_frontend/src/app/pages/notes-page/notes-page.component.ts", "pattern": "/^      const cur = this.notesSvc.getSelectedNoteId();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-23307-23316/notes_frontend/src/app/pages/notes-page/notes-page.component.ts", "pattern": "/^    const id = this.selectedId();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-23307-23316/notes_frontend/src/app/pages/notes-page/notes-page.component.ts", "pattern": "/^    const list = this.notes().filter(n =>$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "notesSvc", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-23307-23316/notes_frontend/src/app/pages/notes-page/notes-page.component.ts", "pattern": "/^  private notesSvc = inject(NotesService);$/", "language": "TypeScript", "kind": "property", "scope": "NotesPageComponent", "scopeKind": "class"}, {"_type": "tag", "name": "t", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-23307-23316/notes_frontend/src/app/pages/notes-page/notes-page.component.ts", "pattern": "/^    const t = term.toLowerCase();$/", "language": "TypeScript", "kind": "constant"}], "hash": "fbec9da876a4d6a30d40686411e51e98", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/pages/notes-page/notes-page.component.ts", "fields": [{"name": "private notesSvc = inject(NotesService);", "scope": "NotesPageComponent", "scopeKind": "class", "description": "unavailable"}]}