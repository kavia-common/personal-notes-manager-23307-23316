{"is_source_file": true, "format": "TypeScript", "description": "This source file defines the NotesService class in an Angular application, responsible for CRUD operations on notes via HTTP requests, and maintaining observable data streams for notes, loading state, and selected note.", "external_files": ["../models/note.model"], "external_methods": ["HttpClient.get", "HttpClient.post", "HttpClient.put", "HttpClient.delete"], "published": ["notesObservable", "loadingObservable", "selectedNoteObservable", "loadNotes", "createNote", "updateNote", "deleteNote", "selectNote", "getNotesSnapshot", "getSelectedNoteId"], "classes": [{"name": "NotesService", "description": "An Angular service for managing notes via HTTP, exposing observables for notes data, loading state, and selection.", "methods": [{"name": "apiBaseUrl", "description": "Getter for the base URL used for the backend API, configurable via environment variable."}, {"name": "loadNotes", "description": "Fetches all notes from the backend and updates the notes observable, sorting by updatedAt descending."}, {"name": "createNote", "description": "Creates a new note with given title and optional content, updates the notes list, and selects the new note."}, {"name": "updateNote", "description": "Updates an existing note identified by id with provided fields."}, {"name": "deleteNote", "description": "Deletes a note by id and updates the observable list and selection if needed."}, {"name": "selectNote", "description": "Sets the currently selected note by id."}, {"name": "getNotesSnapshot", "description": "Returns the current snapshot of the notes array."}, {"name": "getSelectedNoteId", "description": "Returns the id of the currently selected note."}]}], "methods": [{"name": "apiBaseUrl", "description": "Getter for API base URL."}, {"name": "loadNotes", "description": "Loads all notes from backend."}, {"name": "createNote", "description": "Creates a new note."}, {"name": "updateNote", "description": "Updates an existing note."}, {"name": "deleteNote", "description": "Deletes a note."}, {"name": "selectNote", "description": "Selects a note by id."}, {"name": "getNotesSnapshot", "description": "Returns current notes snapshot."}, {"name": "getSelectedNoteId", "description": "Returns current selected note id."}], "calls": ["this.http.get", "this.http.post", "this.http.put", "this.http.delete", "this.notes$.next", "this.loading$.next", "this.selectedNoteId$.next", "this.notes$.getValue", "this.selectedNoteId$.getValue", "this.notes$.asObservable", "this.selectedNoteObservable()"], "search-terms": ["NotesService", "Notes HTTP CRUD", "observable store notes", "Angular injectable service", "Notes API URL", "notes observables"], "state": 2, "file_id": 22, "knowledge_revision": 91, "git_revision": "", "revision_history": [{"45": ""}, {"91": ""}], "ctags": [{"_type": "tag", "name": "NotesService", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-23307-23316/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^export class NotesService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-23307-23316/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private http = inject(HttpClient);$/", "language": "TypeScript", "kind": "property", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-23307-23316/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^        const list = [note, ...this.notes$.getValue()];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-23307-23316/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^        const list = this.notes$.getValue().filter(n => n.id !== id);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-23307-23316/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^        const list = this.notes$.getValue().map(n => (n.id === id ? updated : n));$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "sorted", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-23307-23316/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^          const sorted = [...notes].sort((a, b) => +new Date(b.updatedAt) - +new Date(a.updatedA/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "w", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-23307-23316/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const w = (globalThis as any);$/", "language": "TypeScript", "kind": "constant"}], "hash": "f953434f0f628d654dd0a7e06d8872e5", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/notes.service.ts", "fields": [{"name": "private http = inject(HttpClient);", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}]}